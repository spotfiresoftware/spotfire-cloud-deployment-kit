apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spotfire-common.spotfire-service.fullname" . }}
  labels:
    {{- include "spotfire-common.spotfire-service.labels" (merge . (dict "componentName" "pythonservice")) | nindent 4 }}
spec:
  {{- if not .Values.kedaAutoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "spotfire-common.spotfire-service.selectorLabels" (merge . (dict "componentName" "pythonservice")) | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/serviceconfig-configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "spotfire-common.spotfire-service.labels" (merge . (dict "componentName" "pythonservice")) | nindent 8 }}
    spec:
      terminationGracePeriodSeconds: {{ add .Values.nodemanagerConfig.preStopDrainingTimeoutSeconds 30 }}
      {{- include "spotfire-common.spotfire-service.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "spotfire-common.spotfire-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.extraInitContainers }}
      initContainers:
        {{- tpl (toYaml .Values.extraInitContainers) $ | nindent 10 }}
      {{- end }}
      containers:
        - name: spotfire-pythonservice
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ template "spotfire-common.spotfire-service.image" . }}"
          imagePullPolicy: "{{ template "spotfire-common.spotfire-service.image.pullPolicy" . }}"
          envFrom:
          {{- if .Values.extraEnvVarsSecret }}
          - secretRef:
              name: {{ tpl .Values.extraEnvVarsSecret $ }}
          {{- end }}
          {{- if .Values.extraEnvVarsCM }}
          - configMapRef:
              name: {{ tpl .Values.extraEnvVarsCM $ }}
          {{- end }}
          env:
          - name: NODEMANAGER_IP_ADDRESS
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SERVER_BACKEND_ADDRESS
            value: {{ required "The spotfire server service address must be set for spotfire nodemanager configuration" (tpl .Values.nodemanagerConfig.serverBackendAddress $) }}
          {{- include "spotfire-common.acceptEUAEnvVar" . | nindent 10 }}
          {{- include "spotfire-common.spotfire-service.logging.serverEnvVars" . | nindent 10 }}
          {{- include "spotfire-common.spotfire-service.logging.podAnnotationsEnvVars" . | nindent 10 }}
          {{- if .Values.extraEnvVars }}
          {{ tpl (toYaml .Values.extraEnvVars) $ | nindent 10 }}
          {{- end }}
          volumeMounts:
          - name: logs-volume
            mountPath: /opt/spotfire/nodemanager/nm/logs
          {{- include "spotfire-common.volumes.troubleshooting.volumeMount" . | indent 10 }}
          {{- if or .Values.volumes.packages.persistentVolumeClaim.create .Values.volumes.packages.existingClaim }}
          - name: packages-volume
            mountPath: /opt/packages
            subPath: {{ .Values.volumes.packages.subPath | quote }}
          {{- end }}
          - name: serviceconfig
            mountPath: /opt/spotfire/nodemanager/nm/services/PYTHON/conf/additional-custom.properties
            subPath: additionalCustomProperties
          {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          ports:
            - name: service
              containerPort: 9501
              protocol: TCP
            - name: backend
              protocol: TCP
              containerPort: 9443
            - name: registration
              protocol: TCP
              containerPort: 9080
          {{- if .Values.startupProbe.enabled }}
          startupProbe: {{- omit .Values.startupProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe: {{- omit .Values.livenessProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe: {{- omit .Values.readinessProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}
          lifecycle:
            preStop:
              exec:
                command: ["/bin/bash", "-c", "/opt/spotfire/nodemanager/scripts/pre-stop-hook.sh {{ .Values.nodemanagerConfig.preStopDrainingTimeoutSeconds }} true >> /proc/1/fd/1 2>&1"]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: fluent-bit
          securityContext:
            {{- toYaml .Values.fluentBitSidecar.securityContext | nindent 12 }}
          image: "{{ .Values.fluentBitSidecar.image.repository }}:{{ .Values.fluentBitSidecar.image.tag }}"
          imagePullPolicy: "{{ .Values.fluentBitSidecar.image.pullPolicy }}"
          ports:
            - name: http
              containerPort: 2020
              protocol: TCP
          env:
          {{- include "spotfire-common.spotfire-service.logging.podAnnotationsEnvVars" . | nindent 10 }}
          {{- if (tpl .Values.logging.logForwarderAddress $) }}
          - name: FLUENTBIT_FORWARD_HOST
            value: {{ (tpl .Values.logging.logForwarderAddress $) }}
          - name: FLUENTBIT_FORWARD_PORT
            value: "24224"
          {{- end }}
          - name: FILE_SEPARATOR
            value: /
          - name: TSNM_HOME
            value: /nodemanager
          - name: CONTAINER_NAME
            value: spotfire-pythonservice
          volumeMounts:
          {{- include "spotfire-common.fluenbit-configuration.volume.mount" . | indent 10}}
          lifecycle:
            preStop:
            {{- include "spotfire-common.fluenbit-configuration.tsnm.prestop.exec" . | indent 14 }}
      volumes:
        {{- with .Values.extraVolumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- include "spotfire-common.volumes.troubleshooting.volume" . | indent 8 }}
        - name: logs-volume
          emptyDir: {}
        {{- if or .Values.volumes.packages.persistentVolumeClaim.create .Values.volumes.packages.existingClaim }}
        - name: packages-volume
          persistentVolumeClaim:
            claimName: {{ include "spotfire-common.volumes.packages.pvc.name" . }}
        {{- end }}
        - name: serviceconfig
          configMap:
            name: {{ .Release.Name }}-{{ .Chart.Name }}-serviceconfig
        - name: fluent-bit-config
          configMap:
            name: {{ include "spotfire-common.fluenbit-configuration.configmapName" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
