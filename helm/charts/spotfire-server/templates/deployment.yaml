apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spotfire-server.fullname" . }}
  labels:
    {{- include "spotfire-server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.kedaAutoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "spotfire-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "spotfire-server.labels" . | nindent 8 }}
    spec:
      {{- include "spotfire-server.imagePullSecrets" . | nindent 6}}
      terminationGracePeriodSeconds: {{ add (ternary .Values.configuration.draining.timeoutSeconds 0 .Values.configuration.draining.enabled) 30 }}
      serviceAccountName: {{ include "spotfire-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.extraInitContainers }}
      initContainers:
        {{- tpl (toYaml .Values.extraInitContainers) $ | nindent 10 }}
      {{- end }}
      containers:
        - name: spotfire-server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ template "spotfire-server.image" . }}"
          imagePullPolicy: "{{ template "spotfire-server.image.pullPolicy" . }}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: backend 
              protocol: TCP
              containerPort: 9443
            - name: registration
              protocol: TCP
              containerPort: 9080
            - name: monitoring
              protocol: TCP
              containerPort: 9081
          {{- if .Values.startupProbe.enabled }}
          startupProbe: {{- omit .Values.startupProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe: {{- omit .Values.livenessProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe: {{- omit .Values.readinessProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.configuration.draining.enabled }}
          lifecycle:
            preStop:
              exec:
                command:
                - /opt/tibco/scripts/pre-stop-hook.sh
                - {{ printf "--minimum-draining-seconds=%v" .Values.configuration.draining.minimumSeconds }}
                - {{ printf "--draining-timeout-seconds=%v" .Values.configuration.draining.timeoutSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - secretRef:
                name: {{ template "spotfire-server.spotfiredatabase.secret.name" . }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ tpl .Values.extraEnvVarsSecret $ }}
            {{- end }}
            {{- if .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ tpl .Values.extraEnvVarsCM $ }}
            {{- end }}
          env:
            {{- if .Values.extraEnvVars }}
            {{ tpl (toYaml .Values.extraEnvVars) $ | nindent 12 }}
            {{- end }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SERVER_BACKEND_ADDRESS
              value: {{ include "spotfire-server.fullname" . | quote }}
            - name: SERVER_IP_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            {{- include "spotfire-server.site.envVars" . | nindent 12 }}
            {{- include "spotfire-common.acceptEUAEnvVar" . | nindent 12 }}
            {{- include "spotfire-server.database.envVars" . | nindent 12 }}
            {{- if .Values.logging.logLevel }}
            - name: LOGGING_LOGLEVEL
              value: {{ .Values.logging.logLevel | quote }}
            {{- end -}}
            {{- if or .Values.spotfireServerJava.extraJavaOpts .Values.troubleshooting.jvm.heapDumpOnOutOfMemoryError.enabled }}
            {{- include "spotfire-server.jvm.parameter" . | nindent 12 }}
            {{- end }}
          volumeMounts:
          {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          - name: logs-volume
            mountPath: /opt/tibco/tss/tomcat/logs
          {{- if .Values.volumes.certificates.existingClaim }}
          - name: certificates-volume
            mountPath: /opt/tibco/tss/tomcat/certs
          {{- end }}
          {{- if .Values.volumes.customExt.existingClaim }}
          - name: custom-ext
            mountPath: /opt/tibco/tss/tomcat/custom-ext
          {{- end }}
          {{- if .Values.volumes.customExtInformationservices.existingClaim }}
          - name: custom-ext-informationservices
            mountPath: /opt/tibco/tss/tomcat/custom-ext-informationservices
          {{- end }}
          {{- if or .Values.volumes.libraryImportExport.persistentVolumeClaim.create .Values.volumes.libraryImportExport.existingClaim }}
          - name: library-import-export
            mountPath: /opt/tibco/tss/tomcat/application-data/library
          {{- end }}
          - name: troubleshooting-volume
            mountPath: /opt/tibco/troubleshooting/
            subPathExpr: $(POD_NAME)
        - name: fluent-bit
          image: "{{ .Values.fluentBitSidecar.image.repository }}:{{ .Values.fluentBitSidecar.image.tag }}"
          imagePullPolicy: "{{ .Values.fluentBitSidecar.image.pullPolicy }}"
          securityContext:
            {{- toYaml .Values.fluentBitSidecar.securityContext | nindent 12 }}          
          ports:
            - name: http
              containerPort: 2020
              protocol: TCP
          env:
          {{- include "spotfire-server.logging.podAnnotationsEnvVars" . | nindent 10 }}
          {{- if (include "spotfire-server.log-forwarder.fullname" $) }}
          - name: FLUENTBIT_FORWARD_HOST
            value: {{ include "spotfire-server.log-forwarder.fullname" $ }}
          - name: FLUENTBIT_FORWARD_PORT
            value: "24224"
          {{- end }}
          - name: FILE_SEPARATOR
            value: /
          - name: TSS_HOME
            value: /tss
          - name: CONTAINER_NAME
            value: spotfire-server
          volumeMounts:
          {{- if (include "spotfire-server.log-forwarder.fullname" $) }}
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/fluent-bit.conf
            subPath: tss.forward.fluentbit.conf
          {{- else }}
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/fluent-bit.conf
            subPath: tss.stdout.fluentbit.conf
          {{- end }}
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/tss.tail.fluentbit.conf
            subPath: tss.tail.fluentbit.conf
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/tss.podannotations.fluentbit.conf
            subPath: tss.podannotations.fluentbit.conf
          - name: fluent-bit-config
            mountPath: /fluent-bit/etc/tss.parsers.fluentbit.conf
            subPath: tss.parsers.fluentbit.conf
          - name: logs-volume
            mountPath: /tss/logs
          lifecycle:
            preStop:
              exec:
                command:
                - /fluent-bit/bin/fluent-bit
                - "-v"
                - "-i"
                - "tail"
                - "-p"
                - path=/tss/logs/tss-terminated
                - "-o"
                - "exit"
                - "-p"
                - "flush_count=1"
      volumes:
      {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        - name: logs-volume
          emptyDir: {}
        - name: fluent-bit-config
          configMap:
            name: {{ .Release.Name }}-{{ .Chart.Name }}-fluent-bit
        {{- if or .Values.volumes.libraryImportExport.persistentVolumeClaim.create .Values.volumes.libraryImportExport.existingClaim }}
        - name: library-import-export
          persistentVolumeClaim:
            claimName: {{ include "spotfire-server.volumes.library-import-export.pvc.name" . }}
        {{- end }}
        {{- if .Values.volumes.customExt.existingClaim }}
        - name: custom-ext
          persistentVolumeClaim:
            claimName: {{ .Values.volumes.customExt.existingClaim }}
        {{- end }}
        {{- if .Values.volumes.customExtInformationservices.existingClaim }}
        - name: custom-ext-informationservices
          persistentVolumeClaim:
            claimName: {{ .Values.volumes.customExtInformationservices.existingClaim }}
        {{- end }}
        {{- if .Values.volumes.certificates.existingClaim }}
        - name: certificates-volume
          persistentVolumeClaim:
            claimName: {{ .Values.volumes.certificates.existingClaim }}
        {{- end }}
        - name: troubleshooting-volume
          {{- if or .Values.volumes.troubleshooting.persistentVolumeClaim.create .Values.volumes.troubleshooting.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ include "spotfire-server.troubleshooting.pvc.name" . }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
